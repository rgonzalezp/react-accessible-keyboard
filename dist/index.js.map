{"version":3,"file":"index.js","sources":["../src/CustomKeyboard/CustomKeyboard.tsx","../src/Key/Key.tsx","../src/TextBox/TextBox.tsx","../src/Keyboard/Keyboard.tsx"],"sourcesContent":["import * as React from 'react'\n\n\nexport default function CustomKeyboard() {\n    return (\n        <div>\n            \n        </div>\n    )\n}","import * as React from \"react\";\nimport * as CSS from \"csstype\";\n\nconst Key = ({ getKeyOnClick, value, height, id, darkmode }: any) => {\n  interface Style extends CSS.Properties, CSS.PropertiesHyphen {}\n\n  const retrieveKeyInfo = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    const currentElement = window.document.getElementById(id);\n    if (currentElement === null) {\n    } else {\n      let tapInfo = {\n        x: event.clientX,\n        y: event.clientY,\n        content: value,\n      };\n      getKeyOnClick(tapInfo);\n    }\n  };\n\n  const keyboardKey: Style = {\n    \"max-width\": \"50%\",\n    width: \"20%\",\n    \"min-width\": \"20px\",\n    height: height,\n    position: \"relative\",\n    background: darkmode === true ? \"black\" : \"white\",\n    color: darkmode === true ? \"white\" : \"black\",\n    \"font-size\": \"16px\"\n  } as const;\n\n  // class react-keyboard-key, to modify style of all regular keys.\n  return (\n    <button\n      style={keyboardKey}\n      className=\"react-keyboard-key\"\n      id={id}\n      onClick={(event) => retrieveKeyInfo(event)}\n    >\n      {value}\n    </button>\n  );\n};\n\nexport default Key;\n","import * as React from 'react'\nimport * as CSS from \"csstype\";\n\nconst TextBox = ({ darkmode, userinput }: any) => {\n    interface Style extends CSS.Properties, CSS.PropertiesHyphen {}\n\n    const textBox: Style = {\n        background: darkmode === true ? \"black\" : \"white\",\n        color: darkmode === true ? \"white\" : \"black\",\n      } as const;\n\n\n    return (\n    <textarea style={textBox} id= \"react-accessible-keyboard-textarea\" disabled value={userinput}></textarea>\n    )\n}\n\nexport default TextBox","import * as React from \"react\";\nimport Key from \"./../Key/Key\";\nimport TextBox from \"./../TextBox/TextBox\";\nimport * as CSS from \"csstype\";\nconst { useState, useEffect } = React;\n\nconst Keyboard = ({\n  onKeyboardLoad,\n  onSubmit,\n  className,\n  location,\n  arrayWords,\n  darkmode,\n}: any) => {\n  interface Style extends CSS.Properties, CSS.PropertiesHyphen {}\n  //receive keys as props, not state\n  const [keySet, setKeys] = useState([\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"],\n  ]);\n\n  const primaryKeysDefault = [\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"],\n  ];\n  const secondaryKeysDefault = [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"@\", \"#\", \"$\", \"_\", \"&\", \"-\", \"+\", \"(\", \")\", \"/\"],\n    [\"*\", '\"', \"'\", \":\", \";\", \"!\", \"?\", \".\", \",\"],\n  ];\n\n  const [keyHeight, setHeight] = useState(0);\n  const [userinput, setUserinput] = useState(\"\");\n  const [shiftifyBoolean, setShiftifyBoolean] = useState(false);\n  const [secondaryBoolean, setSecondaryBoolean] = useState(true);\n\n  const textBoxFlex: Style = {\n    width: \"100%\",\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\",\n    \"vertical-align\": \"middle\",\n  } as const;\n\n  const retrieveKeyboardInfo = () => {\n    const keyboardContainer = window.document.getElementById(\"keyboard\");\n\n    let data = {\n      keyboardHeight: keyboardContainer?.clientHeight,\n      keyboardWidth: keyboardContainer?.clientWidth,\n    };\n    onKeyboardLoad(data);\n  };\n\n  const retrieveKeyInfo = (e: any) => {\n    let textToSet = userinput.concat(e.content);\n    setUserinput(textToSet);\n  };\n\n  const retrieveSpecialKeyInfo = (e: any) => {\n    let textToSet = userinput.concat(\" \").concat(e.content);\n    setUserinput(textToSet);\n  };\n\n  const sendQuery = (e: any) => {\n    let textToUseAndEliminate = userinput;\n\n    //E Contains tap info, bubbles up the whole textarea and deletes it.\n    setUserinput(\"\");\n    onSubmit(textToUseAndEliminate, e);\n  };\n\n  const deleteInput = () => {\n    let textToSet = userinput.substring(0, userinput.length - 1);\n    setUserinput(textToSet);\n  };\n\n  const spaceInput = () => {\n    let textToSet = userinput.concat(\" \");\n    setUserinput(textToSet);\n  };\n\n  const setSecondary = () => {\n    \n    if (secondaryBoolean) {\n      setKeys(secondaryKeysDefault);\n    } else {\n      setKeys(primaryKeysDefault);\n    }\n    setSecondaryBoolean(!secondaryBoolean);\n  };\n\n  const shiftify = () => {\n    const shiftifiedArray:\n      | ((prevState: string[][]) => string[][])\n      | any[][] = [];\n\n    setShiftifyBoolean(!shiftifyBoolean);\n    if (shiftifyBoolean) {\n      keySet.forEach((keyRow) => {\n        const shiftifiedRow: any[] = [];\n        keyRow.forEach((key) => {\n          shiftifiedRow.push(key.toLocaleUpperCase());\n        });\n        shiftifiedArray.push(shiftifiedRow);\n      });\n    } else {\n      keySet.forEach((keyRow) => {\n        const shiftifiedRow: any[] = [];\n        keyRow.forEach((key) => {\n          shiftifiedRow.push(key.toLocaleLowerCase());\n        });\n        shiftifiedArray.push(shiftifiedRow);\n      });\n    }\n\n    setKeys(shiftifiedArray);\n  };\n\n  useEffect(() => {\n    //Setting keyboard keys size\n    const viewPortHeight = window.innerHeight;\n\n    const promise = new Promise((resolve, reject) => {\n      setHeight(viewPortHeight * 0.07);\n      resolve(keyHeight);\n    });\n\n    promise.then((res) => {\n      //Set state to send keyboard information.\n      retrieveKeyboardInfo();\n    });\n\n    //Keyboard information\n\n    // const currentElementClientRect = currentElement.getBoundingClientRect();\n    // var key = {x:0,y:0,height:0,width:0,label:value};\n    // key.x = currentElementClientRect.x - 300 + currentElementClientRect.width / 2;\n    // key.y = currentElementClientRect.y - 300 + currentElementClientRect.height / 2;\n    // key.height = currentElementClientRect.height;\n    // key.width = currentElementClientRect.width;\n    return () => {};\n  }, [keyHeight]);\n\n  return (\n    <div className={className}>\n      <div style={textBoxFlex}>\n        {location === \"top\" ? (\n          <TextBox darkmode={darkmode} userinput={userinput} />\n        ) : null}\n        <Key\n          id=\"react-accessible-keyboard-submit\"\n          darkmode={darkmode}\n          value={\"Submit\"}\n          height={keyHeight}\n          getKeyOnClick={sendQuery}\n        ></Key>\n      </div>\n      <div id=\"keyboard\">\n        <div className=\"react-accessible-keyboard-row\">\n          <Key\n            id=\"react-accessible-keyboard-autocomplete1\"\n            darkmode={darkmode}\n            value={arrayWords[0]}\n            height={keyHeight}\n            getKeyOnClick={retrieveSpecialKeyInfo}\n          ></Key>\n          <Key\n            id=\"react-accessible-keyboard-autocomplete2\"\n            darkmode={darkmode}\n            value={arrayWords[1]}\n            height={keyHeight}\n            getKeyOnClick={retrieveSpecialKeyInfo}\n          ></Key>\n          <Key\n            id=\"react-accessible-keyboard-autocomplete3\"\n            darkmode={darkmode}\n            value={arrayWords[2]}\n            height={keyHeight}\n            getKeyOnClick={retrieveSpecialKeyInfo}\n          ></Key>\n        </div>\n        {keySet.map((keyRow) => {\n          return (\n            <div className=\"react-accessible-keyboard-row\">\n              {keyRow.map((key) => {\n                return (\n                  <Key\n                    id={key}\n                    darkmode={darkmode}\n                    value={key}\n                    height={keyHeight}\n                    getKeyOnClick={retrieveKeyInfo}\n                  ></Key>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"react-accessible-keyboard-row\">\n        <Key\n          id=\"react-accessible-keyboard-shift\"\n          darkmode={darkmode}\n          value={secondaryBoolean?\"secondary\":\"primary\"}\n          height={keyHeight}\n          getKeyOnClick={setSecondary}\n        ></Key>\n        <Key\n          id=\"react-accessible-keyboard-shift\"\n          darkmode={darkmode}\n          value={\"shift\"}\n          height={keyHeight}\n          getKeyOnClick={shiftify}\n        ></Key>\n        <Key\n          id=\"react-accessible-keyboard-backspace\"\n          darkmode={darkmode}\n          value={\"backspace\"}\n          height={keyHeight}\n          getKeyOnClick={spaceInput}\n        ></Key>\n        <Key\n          id=\"react-accessible-keyboard-delete\"\n          darkmode={darkmode}\n          value={\"delete\"}\n          height={keyHeight}\n          getKeyOnClick={deleteInput}\n        ></Key>\n      </div>\n      {location === \"bottom\" ? <TextBox /> : null}\n      {location !== \"bottom\" && location !== \"top\" ? <TextBox /> : null}\n    </div>\n  );\n};\n\n//default render is at the bottom if the person doesn't set the location prop.\n\nexport default Keyboard;\n"],"names":["React"],"mappings":"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"}